#!/usr/bin/python
# -*- coding: utf-8 -*-

import gtk
from subprocess import call


class SystrayIconApp:
    def __init__(self):
        self.tray = gtk.StatusIcon()
        self.tray.set_from_file("/usr/share/icons/gnome/32x32/status/info.png")
        self.tray.connect('popup-menu', self.on_right_click)
        self.tray.set_tooltip(('Sample tray app'))

    def on_right_click(self, icon, event_button, event_time):
        self.make_menu(event_button, event_time)

    def kill_xmobar(self, widget):
        call(["pkill", "xmobar"])

    def kill_emacs(self, widget):
        call(["pkill", "-9", "emacs"])

    def restart_xmonad(self, widget):
        call(["xmonad", "--restart"])

    def make_menu(self, event_button, event_time):
        menu = gtk.Menu()

        # kill xmobar
        menu_item = gtk.MenuItem("Kill xmobar")
        menu_item.show()
        menu.append(menu_item)
        menu_item.connect('activate', self.kill_xmobar)

        # kill emacs
        menu_item = gtk.MenuItem("Kill emacs")
        menu_item.show()
        menu.append(menu_item)
        menu_item.connect('activate', self.kill_xmobar)

        # restart xmonad
        menu_item = gtk.MenuItem("Restart xmonad")
        menu_item.show()
        menu.append(menu_item)
        menu_item.connect('activate', self.restart_xmonad)

        # add quit item
        quit = gtk.MenuItem("Quit")
        quit.show()
        menu.append(quit)
        quit.connect('activate', gtk.main_quit)

        menu.popup(None, None, gtk.status_icon_position_menu,
                   event_button, event_time, self.tray)


if __name__ == "__main__":
    SystrayIconApp()
    gtk.main()
